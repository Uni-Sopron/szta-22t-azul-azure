/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package azul;

import static org.junit.jupiter.api.Assertions.assertEquals;
import java.util.Arrays;
import java.util.Collection;
import java.util.List;
import java.util.function.Function;
import java.util.stream.Collectors;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Order;
import org.junit.jupiter.api.Test;
import azul.mocks.ManufactureDiskMock;



class BagTest {

    private Bag bag;
    private ManufactureDisk[] disks;

    @BeforeEach
    void init() {
        bag = new Bag();
    }


    @Test
    @Order(1)
    void Bag_has_exactly_100_tiles() {

        disks = new ManufactureDisk[25];
        for (int i = 0; i < 25; i++) {
            disks[i] = new ManufactureDiskMock();
        }
        bag.shuffleTo(disks);

        int poppedTilesSize = ((List<Tile>) Arrays.asList(disks).stream().map(d -> d.getTiles())
                .flatMap(Collection::stream).collect(Collectors.toList())).size();
        assertEquals(100, poppedTilesSize);

    }

    @Test
    @Order(2)
    void Bag_colors_equally_distributed() {

        disks = new ManufactureDisk[25];
        for (int i = 0; i < 25; i++) {
            disks[i] = new ManufactureDiskMock();
        }
        bag.shuffleTo(disks);
        //Csak, hogy le tudjon fordulni
        /*List<Tile> poppedTiles = (List<Tile>) Arrays.asList(disks).stream().map(d -> d.getTiles()).toList()
                .stream().flatMap(Collection::stream).collect(Collectors.toList());
        

        var occurences = poppedTiles.stream().map(t -> t.getColor())
                .collect(Collectors.groupingBy(Function.identity(), Collectors.counting()));

        assertEquals(5, occurences.size());
        for (var occurenceCount : occurences.values()) {
            assertEquals(20, occurenceCount);
        }*/
    }
}
