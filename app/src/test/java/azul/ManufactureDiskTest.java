/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package azul;

import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertThrows;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.ValueSource;
import azul.mocks.ManufactureDiskMock;



class ManufactureDiskTest {

    Bag bag;
    ManufactureDisk[] disks;

    @BeforeEach
    void init() {
        bag = new Bag();
    }

    @ParameterizedTest
    @ValueSource(ints = {3, 5, 7})
    void Manufacturedisks_have_four_tiles_after_shuffle(int diskNum) {
        disks = new ManufactureDisk[diskNum];
        for (int i = 0; i < diskNum; i++) {
            disks[i] = new ManufactureDiskMock();
        }


        assertDoesNotThrow(() -> bag.shuffleTo(disks));

        for (ManufactureDisk disk : disks) {
            assertEquals(4, disk.getTiles().size());
        }

        assertThrows(IllegalStateException.class, () -> bag.shuffleTo(disks));
    }


}
