name: Build

on:
  push:
    branches:
      - main
      - "featuresLorem"
      - "abelfeatures"
      - "FeaturesJB"
  pull_request:
    branches:
      - main
      - "featuresLorem"
      - "abelfeatures"
      - "FeaturesJB"

jobs:
  # Builds the current source code and run all tests.
  # Fails if the code cannot be compiled or any of the tests fails.
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Lint Code Base
        uses: github/super-linter/slim@v4
        env:
          VALIDATE_ALL_CODEBASE: false
          VALIDATE_GOOGLE_JAVA_FORMAT: true
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: "17"
          distribution: "temurin"
      - name: Build with Gradle
        uses: gradle/gradle-build-action@937999e9cc2425eddc7fd62d1053baf041147db7
        with:
          arguments: build
      # User-friendly display of the test results.
      - name: Junit test reporter
        uses: mikepenz/action-junit-report@v3
        if: always() # always run even if the previous step fails
        with:
          report_paths: "app/build/test-results/test/TEST-*.xml"
      - name: Generate additional badges
        run: cd indicators && sudo python get_badges.py
  # After succesful build, generate javadoc, and then deploy it to the "gh-pages" branch.
  javadoc:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - name: Run Javadoc
        run: ./gradlew aggregateJavadoc
      - name: Deploy
        uses: JamesIves/github-pages-deploy-action@v4.2.5
        with:
          branch: gh-pages
          clean: true
          folder: app/build/docs/aggregateJavadoc
          target-folder: /

  # In case this is a tag, create a Docker image from the branch, build it and deploy it to DockerHub.
  docker-publish:
    if: github.event_name == 'push'  && contains(github.ref, 'refs/tags/')
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: soeazul/azulgame

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
